what is recursion ?
A process (a function in our case) that calls itself.

why we use this pattern?
ans->Coz its easy (sometime not) and is used everywhere

1.JSON.parse / JSON.stringify
2.document.getElementById and DOM traversal algorithms
3.Object traversal
4.Very common with more complex algorithms
5.It's sometimes a cleaner alternative to iteration

How recursive functions work
ans->Invoke the same function with a different input until you reach your base case!

 What is Base Case?
The condition when the recursion ends.

This is the most important concept to understand 

Two essential parts of a recursive function!
Base Case
Different Input

lets see our first recursive function
countDown.js

now see sumRange.js also has the factorial.js
go and practice intil it sits in your brain 

you can use crome dev tool Call stack so that you see each and every piece clearly 

Where things go wrong?
1.No base case
2.Forgetting to return or returning the wrong thing!
3.Stack overflow! 

Actually there are two types of recursion (widely use)
1.Helper method recursion.
2.Pure Recursion.


go to Helper method recursion for code

now if you are done with helper method jump to Purerecursion.js


What about big O?

->Measuring time complexity is relatively simple. You can measure the time complexity of a recursive function as then number of recursive calls you need to make relative to the input

->Measuring space complexity is a bit more challenging. You can measure the space complexity of a recursive function as the maximum number of functions on the call stack at a given time, since the call stack requires memory.

Tail Call Optimization
ES2015 allows for tail call optimization, where you can make some function calls without growing the call stack.

By using the return keyword in a specific fashion we can extract output from a function without keeping it on the call stack.

i have added some more example like power and productOfArray go and look at them if you want more practice .i will add more in the near future



lets revise one more time .

A recursive function is a function that invokes itself
Your recursive functions should always have a base case and be invoked with different input each time
When using recursion, it's often essential to return values from one function to another to extract data from each function call
Helper method recursion is an alternative that allows us to use an external scope in our recursive functions
Pure recursion eliminates the need for helper method recursion, but can be trickier to understand at first

thankYou 